{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { backgroundColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\nimport { styles } from \"../assets/styles/mainStyles.js\";\nimport Header from \"../components/Header.js\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Dados from \"../DATABASE/mainDB.json\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UniqueCard = function UniqueCard(_ref) {\n  var item = _ref.item,\n      onPress = _ref.onPress;\n  return _jsx(View, {\n    style: styles.card,\n    children: _jsxs(TouchableOpacity, {\n      style: styles.card,\n      onPress: onPress,\n      children: [_jsx(Image, {\n        style: styles.ImgIcones,\n        source: {\n          uri: item.img\n        }\n      }), _jsx(Text, {\n        children: item.name\n      })]\n    })\n  });\n};\n\nexport default function HomeScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var DATA = Dados.itens;\n\n  var renderUniqueCard = function renderUniqueCard(_ref3) {\n    var item = _ref3.item;\n    return _jsx(UniqueCard, {\n      item: item,\n      onPress: function onPress() {\n        return navigation.navigate('TelaCards', {\n          idItem: item.id,\n          nome: item.name\n        });\n      }\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(FlatList, {\n      contentContainerStyle: styles.listacards,\n      data: DATA,\n      renderItem: renderUniqueCard,\n      id: UniqueCard.id\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","React","useEffect","useState","backgroundColor","styles","Header","NavigationContainer","createNativeStackNavigator","Dados","SafeAreaView","UniqueCard","item","onPress","card","ImgIcones","uri","img","name","HomeScreen","navigation","DATA","itens","renderUniqueCard","navigate","idItem","id","nome","container","listacards"],"sources":["C:/Users/Laurinha/source/repos/AppTCC/screens/Home.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Text, View,FlatList, Image, ScrollView, TouchableOpacity, Button} from 'react-native';\r\nimport { backgroundColor } from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\r\nimport { styles } from '../assets/styles/mainStyles.js';\r\nimport Header from '../components/Header.js';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Dados from '../DATABASE/mainDB.json'\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst UniqueCard = ({item, onPress})=> (\r\n  <View style={styles.card}>\r\n\r\n  <TouchableOpacity\r\n     style={styles.card}\r\n     onPress={onPress}\r\n   >\r\n       <Image style={styles.ImgIcones} source={{uri:item.img}}/>\r\n       <Text>{item.name}</Text>\r\n                 \r\n </TouchableOpacity>\r\n   \r\n  </View>\r\n);\r\n\r\nexport default function HomeScreen({navigation}) {\r\n  \r\n  const DATA = Dados.itens;\r\n\r\n  const renderUniqueCard = ({item}) => {\r\n    return(\r\n      <UniqueCard\r\n        item={item}\r\n        onPress={() => navigation.navigate('TelaCards', {\r\n          idItem: item.id,\r\n          nome: item.name,\r\n        })}\r\n        \r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n    <StatusBar style=\"dark\" />\r\n   \r\n    <FlatList contentContainerStyle={styles.listacards}\r\n      data={DATA}\r\n      renderItem={renderUniqueCard}\r\n      id={UniqueCard.id}\r\n    />\r\n    </SafeAreaView>\r\n    \r\n  );\r\n}"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;;AAEA,SAASC,eAAT,QAAgC,mEAAhC;AACA,SAASC,MAAT;AACA,OAAOC,MAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,SAASC,YAAT,QAA6B,gCAA7B;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;EAAA,IAAEC,IAAF,QAAEA,IAAF;EAAA,IAAQC,OAAR,QAAQA,OAAR;EAAA,OACjB,KAAC,IAAD;IAAM,KAAK,EAAER,MAAM,CAACS,IAApB;IAAA,UAEA,MAAC,gBAAD;MACG,KAAK,EAAET,MAAM,CAACS,IADjB;MAEG,OAAO,EAAED,OAFZ;MAAA,WAIK,KAAC,KAAD;QAAO,KAAK,EAAER,MAAM,CAACU,SAArB;QAAgC,MAAM,EAAE;UAACC,GAAG,EAACJ,IAAI,CAACK;QAAV;MAAxC,EAJL,EAKK,KAAC,IAAD;QAAA,UAAOL,IAAI,CAACM;MAAZ,EALL;IAAA;EAFA,EADiB;AAAA,CAAnB;;AAeA,eAAe,SAASC,UAAT,QAAkC;EAAA,IAAbC,UAAa,SAAbA,UAAa;EAE/C,IAAMC,IAAI,GAAGZ,KAAK,CAACa,KAAnB;;EAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAY;IAAA,IAAVX,IAAU,SAAVA,IAAU;IACnC,OACE,KAAC,UAAD;MACE,IAAI,EAAEA,IADR;MAEE,OAAO,EAAE;QAAA,OAAMQ,UAAU,CAACI,QAAX,CAAoB,WAApB,EAAiC;UAC9CC,MAAM,EAAEb,IAAI,CAACc,EADiC;UAE9CC,IAAI,EAAEf,IAAI,CAACM;QAFmC,CAAjC,CAAN;MAAA;IAFX,EADF;EAUD,CAXD;;EAYA,OACE,MAAC,YAAD;IAAc,KAAK,EAAEb,MAAM,CAACuB,SAA5B;IAAA,WACA,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EADA,EAGA,KAAC,QAAD;MAAU,qBAAqB,EAAEvB,MAAM,CAACwB,UAAxC;MACE,IAAI,EAAER,IADR;MAEE,UAAU,EAAEE,gBAFd;MAGE,EAAE,EAAEZ,UAAU,CAACe;IAHjB,EAHA;EAAA,EADF;AAYD"},"metadata":{},"sourceType":"module"}